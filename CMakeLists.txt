cmake_minimum_required(VERSION 3.0.0)
project(bop VERSION 0.1.0)

# include(CTest)
enable_testing()

add_executable(client client.cpp)
add_executable(server server.cpp)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})

message(STATUS "CMAKE_BUILD_TYPE is ${CMAKE_BUILD_TYPE}")

set(ASAN_FLAGS "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address")
set(TSAN_FLAGS "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=thread")
set(UBSAN_FLAGS "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=undefined")

if (${CMAKE_BUILD_TYPE} STREQUAL ASAN)
    set(CMAKE_CXX_FLAGS_ASAN ${ASAN_FLAGS})
    set(CMAKE_C_FLAGS_ASAN ${ASAN_FLAGS})
    set(CMAKE_EXE_LINKER_FLAGS_ASAN ${ASAN_FLAGS})
    # CMAKE_SHARED_LINKER_FLAGS_ASAN
elseif (${CMAKE_BUILD_TYPE} STREQUAL TSAN)
    set(CMAKE_CXX_FLAGS_TSAN ${TSAN_FLAGS})
    set(CMAKE_C_FLAGS_TSAN ${TSAN_FLAGS})
    set(CMAKE_EXE_LINKER_FLAGS_TSAN ${TSAN_FLAGS})
elseif (${CMAKE_BUILD_TYPE} STREQUAL UBSAN)
    set(CMAKE_CXX_FLAGS_UBSAN ${UBSAN_FLAGS})
    set(CMAKE_C_FLAGS_UBSAN ${UBSAN_FLAGS})
    set(CMAKE_EXE_LINKER_FLAGS_UBSAN ${UBSAN_FLAGS})
endif()

# include(CPack)
